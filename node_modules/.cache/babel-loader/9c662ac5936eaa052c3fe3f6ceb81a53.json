{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\k_bel\\\\Documents\\\\WorkSpace\\\\react-redux-saga-ts\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\k_bel\\\\Documents\\\\WorkSpace\\\\react-redux-saga-ts\\\\src\\\\commons\\\\component\\\\login\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container'; // hangling HOC \n// handling events \n// hangling State \n// HtmlsElement attributes\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      login: '',\n      password: '',\n      shouldMessageErrorAppear: {\n        login: false,\n        password: false\n      }\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            login = _this$state.login,\n            password = _this$state.password;\n      this.props.submitHandler(login, password);\n    };\n\n    this.ValidateField = fieldType => {\n      if (fieldType == \"login\") {\n        this.setState({\n          shouldMessageErrorAppear: _objectSpread({}, this.state.shouldMessageErrorAppear, {\n            login: true\n          })\n        });\n      } else {\n        this.setState({\n          shouldMessageErrorAppear: _objectSpread({}, this.state.shouldMessageErrorAppear, {\n            password: true\n          })\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"login\",\n      label: \"Login\",\n      autoFocus: true,\n      name: \"login\",\n      onChange: this.onChange,\n      value: this.state.login,\n      onBlur: () => this.ValidateField('login'),\n      error: this.state.shouldMessageErrorAppear.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      name: \"password\",\n      onChange: this.onChange,\n      value: this.state.password,\n      onBlur: () => this.ValidateField('password'),\n      error: this.state.shouldMessageErrorAppear.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      name: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Register\"), this.state.shouldMessageErrorAppear.password && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"error Password\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:\\Users\\k_bel\\Documents\\WorkSpace\\react-redux-saga-ts\\src\\commons\\component\\login\\index.tsx"],"names":["React","Button","CssBaseline","TextField","Typography","Container","Login","Component","state","login","password","shouldMessageErrorAppear","onChange","event","setState","target","name","value","handleSubmit","preventDefault","props","submitHandler","ValidateField","fieldType","render"],"mappings":"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","sourcesContent":["\r\nimport React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n// hangling HOC \r\n// handling events \r\n// hangling State \r\n// HtmlsElement attributes\r\n \r\ninterface State{\r\n    /// TODO : ? for the attributes is done to resolve setState problem need to know Why !!!\r\n    login? : String , \r\n    password?: String ,\r\n    shouldMessageErrorAppear?:{\r\n        login : boolean , \r\n        password : boolean , \r\n    }   \r\n}\r\ninterface Props {\r\n    submitHandler: (login: String  , password : String) => void ,\r\n    errorMessageHandler: Function,  \r\n    onClickHandler: (name:String )=> void ,\r\n\r\n}\r\n\r\nclass Login extends React.Component<Props, State> {\r\n   \r\n    state={\r\n        login: '',\r\n        password: '',\r\n        shouldMessageErrorAppear:{\r\n            login : false , \r\n            password : false , \r\n        }\r\n    }\r\n    //  classes = useStyles();\r\n\r\n    onChange =( event: React.ChangeEvent<HTMLInputElement> )=>{\r\n\r\n        this.setState({ [event.target.name] :event.target.value });\r\n       \r\n    }\r\n    handleSubmit =(event: React.FormEvent<HTMLFormElement>)=>{\r\n        event.preventDefault();\r\n        const {login , password} = this.state;\r\n        this.props.submitHandler(login , password)\r\n    }\r\n    ValidateField=(fieldType: String)=>{\r\n        if(fieldType==\"login\")\r\n        {\r\n                this.setState({shouldMessageErrorAppear:{...this.state.shouldMessageErrorAppear, login : true}})\r\n        }\r\n        else \r\n        {\r\n            this.setState({shouldMessageErrorAppear:{...this.state.shouldMessageErrorAppear, password : true}})\r\n\r\n        }\r\n    }\r\n\r\n    render() {  \r\n        return (\r\n         <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                     Register\r\n            </Typography>\r\n            <form  noValidate onSubmit={this.handleSubmit}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"login\"\r\n                label=\"Login\"\r\n                autoFocus\r\n                name=\"login\" \r\n                onChange= {this.onChange} \r\n                value ={ this.state.login}\r\n                onBlur={()=>this.ValidateField('login')}\r\n                error= {this.state.shouldMessageErrorAppear.login }\r\n                />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                name=\"password\" \r\n                onChange= {this.onChange} \r\n                value ={ this.state.password}\r\n                onBlur={()=>this.ValidateField('password')}\r\n                error= {this.state.shouldMessageErrorAppear.password }\r\n                />\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                name = \"submit\"\r\n                \r\n                >\r\n                Register\r\n            </Button>\r\n            {this.state.shouldMessageErrorAppear.password &&\r\n                                <span>error Password</span>\r\n             }\r\n            </form>\r\n        </Container>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default (Login);"]},"metadata":{},"sourceType":"module"}